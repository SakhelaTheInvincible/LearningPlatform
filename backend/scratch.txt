{
 "name": "Web Development Fundamentals",
 "weeks": [
   {
     "material": "HTML basics: document structure, elements, attributes and semantic markup."
   },
   {
     "material": "CSS fundamentals: selectors, properties, layout techniques and responsive design."
   },
   {
     "material": "JavaScript essentials: syntax, variables, functions, DOM manipulation."
   },
   {
     "material": "Frontend frameworks introduction: React components and state management."
   },
   {
     "material": "Backend basics: APIs, server setup and database connectivity."
   }
 ]
}

curl -X POST http://localhost:8000/api/courses/2/create_weeks/ \
-F "week1=@/Users/sabatchumburidze/Desktop/dummy_texts/week1.txt" \
-F "week2=@/Users/sabatchumburidze/Desktop/dummy_texts/week2.txt" \
-F "week3=@/Users/sabatchumburidze/Desktop/dummy_texts/week3.txt"



this duration_weeks we should add constrain on  Course -Weeks relationship 
// this can be checked or just added constrain Course cant contaion on that specified weeks 
during upload which can we ofcourse modified later 



import React from "react";
import { notFound } from "next/navigation";
import api from "@/lib/axios";

interface Course {
  id: number;
  title: string;
  slug: string;
  description: string;
  level: string;
  image: string;
  duration_weeks: number;
  estimated_time: number;
}

async function getCourse(slug: string): Promise<Course> {
  try {
    const response = await api.get(`/courses/`);
    const courses = response.data;
    const course = courses.find((c: Course) => c.slug === slug);
    
    if (!course) {
      notFound();
    }
    
    return course;
  } catch (error) {
    console.error('Error fetching course:', error);
    notFound();
  }
}

export default async function CoursePage({ params }: { params: { slug: string } }) {
  const course = await getCourse(params.slug);

  return (
    <div className="min-h-screen bg-white">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
        <div className="bg-white shadow overflow-hidden sm:rounded-lg">
          <div className="px-4 py-5 sm:px-6">
            <h1 className="text-3xl font-bold text-gray-900">{course.title}</h1>
            <p className="mt-1 max-w-2xl text-sm text-gray-500">
              {course.level} • {course.duration_weeks} weeks • {course.estimated_time} hours
            </p>
          </div>
          <div className="border-t border-gray-200">
            <dl>
              <div className="bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
                <dt className="text-sm font-medium text-gray-500">Description</dt>
                <dd className="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2">
                  {course.description}
                </dd>
              </div>
              <div className="bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
                <dt className="text-sm font-medium text-gray-500">Level</dt>
                <dd className="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2">
                  {course.level}
                </dd>
              </div>
              <div className="bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
                <dt className="text-sm font-medium text-gray-500">Duration</dt>
                <dd className="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2">
                  {course.duration_weeks} weeks
                </dd>
              </div>
              <div className="bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
                <dt className="text-sm font-medium text-gray-500">Estimated Time</dt>
                <dd className="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2">
                  {course.estimated_time} hours
                </dd>
              </div>
            </dl>
          </div>
        </div>
      </div>
    </div>
  );
} 